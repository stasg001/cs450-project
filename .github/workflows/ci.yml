name: Continuous Integration Workflow
on: [push, pull_request]

jobs:
  build_and_test_frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test:unit
  deploy_frontend:
    runs-on: ubuntu-latest
    needs: build_and_test_frontend
    defaults:
      run:
        working-directory: frontend
    if: ${{ github.ref == 'refs/heads/master'  && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - name: build
        run: |
          npm install
          npm run build
      - name: ssh deploy
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOY_USER }}
          SOURCE: "frontend/dist/"
          TARGET: ${{ secrets.DEPLOY_TARGET }}

  test_backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          extensions: xdebug
          coverage: xdebug
      - name: Install dependencies
        run: composer install --no-progress --prefer-dist -o
      - name: Run unit tests
        run: vendor/bin/phpunit --configuration tests/phpunit.xml --coverage-text --bootstrap vendor/autoload.php tests

  deploy_backend:
    runs-on: ubuntu-latest
    needs: test_backend
    if: ${{ github.ref == 'refs/heads/master'  && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2
      - name: ssh deploy
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOY_USER }}
          SOURCE: "api"
          TARGET: ${{ secrets.DEPLOY_TARGET }}
